name: Deploy to ECS Fargate
on:
  push:
    branches: [master]

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 486991249421.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: wisecow
  IMAGE_TAG: ${{ github.run_number }}
  S3_BUCKET: wisecow-trivy-reports

jobs:
  build-scan-approve-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Cache Trivy binary
        id: cache
        uses: actions/cache@v3
        with:
          path: trivy
          key: trivy-cache-${{ runner.os }}

      - name: Install Trivy if not cached
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh
          mkdir -p trivy && mv ./bin/trivy trivy/

      - name: Build Docker Image
        run: docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Trivy Scan Docker Image
        run: |
          trivy/trivy image --timeout 5m --format json \
            -o trivy-report.json $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Upload Trivy Report to S3
        run: |
           aws s3 cp trivy-report.json s3://$S3_BUCKET/trivy-report-${IMAGE_TAG}.json

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY


      - name: Push image to ECR
        run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Register new task definition
        id: register
        run: |
          sed "s|<IMAGE_TAG>|${{ env.IMAGE_TAG }}|g" ecs-task-definition.json \
            > new-task-def.json
          aws ecs register-task-definition --cli-input-json file://new-task-def.json

      - name: Deploy updated service
        run: |
          aws ecs update-service \
            --cluster wisecow-cluster \
            --service wisecow-service \
            --task-definition wisecow-task:${{ env.IMAGE_TAG }} \
            --force-new-deployment \
            --region $AWS_REGION
